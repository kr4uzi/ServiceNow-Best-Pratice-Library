<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_macro">
    <sys_ui_macro action="INSERT_OR_UPDATE">
        <active>true</active>
        <category>general</category>
        <description>Classic UI counterpart to the following Service Portal UI Formatter (with a record watcher):&#13;
/nav_to.do?uri=sp_widget.do?sys_id=ea24f18a972e1110d545b18e6253afc0&#13;
/nav_to.do?uri=sp_ui_formatter.do?sys_id=af14b5ce97ea1110d545b18e6253afab</description>
        <media_type/>
        <name>demo_ui_formatter_macro</name>
        <scoped_name>x_376096_bpl_demo_ui_formatter_macro</scoped_name>
        <sys_class_name>sys_ui_macro</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-10-16 11:20:10</sys_created_on>
        <sys_id>9b796102972e1110d545b18e6253afa4</sys_id>
        <sys_name>demo_ui_formatter_macro</sys_name>
        <sys_package display_value="Best Practice Library" source="x_376096_bpl">53c8084a8702111021d6fcc5dabb35d9</sys_package>
        <sys_policy/>
        <sys_scope display_value="Best Practice Library">53c8084a8702111021d6fcc5dabb35d9</sys_scope>
        <sys_update_name>sys_ui_macro_9b796102972e1110d545b18e6253afa4</sys_update_name>
        <xml><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
	<g2:evaluate>
		var cssRef = '${ref}'.replace(/\./g, '\\.');
		var scopedRecordGr = new GlideRecordSecure('x_376096_bpl_scoped_record');
		scopedRecordGr.addQuery('sys_id', '!=', current.getUniqueValue());
		scopedRecordGr.setLimit(10);
		scopedRecordGr.orderByDesc('sys_created_on');
		scopedRecordGr.query();
		
		var scopedRecords = [];
		while (scopedRecordGr.next()) {
			scopedRecords.push({
				sys_id: scopedRecordGr.getUniqueValue(),
				name: scopedRecordGr.name.toString(),
				parent: scopedRecordGr.getDisplayValue('parent'),
				conditions_table: scopedRecordGr.getDisplayValue('conditions_table'),
				conditions: scopedRecordGr.conditions.toString()
			});
		}
	</g2:evaluate>
	<style>
		#$[cssRef]_description {
			margin-top: 1rem;
			margin-left: 25rem;
		}
		
		#$[cssRef]_record_table {
			width: 100rem;
			margin-left: 25rem;
			margin-bottom: 2rem;
		}
	</style>
	<p id='${ref}_description'>This is a UI Formatter demonstrates a record watcher implementation inside the Classic UI.</p>
    <table id='${ref}_record_table'>
        <thead>
			<tr>
				<th width="15rem">Name</th>
				<th width="15rem">Parent</th>
				<th width="20rem">Conditions Table</th>
				<th width="50rem">Conditions</th>
			</tr>
        </thead>
        <tbody>
            <j2:forEach var="jvar_record" items="$[scopedRecords]">     
                <tr data-record-sys-id="$[jvar_record.sys_id]">
                    <td data-record-field="name">$[jvar_record.name]</td>
                    <td data-record-field="parent">$[jvar_record.parent]</td>
                    <td data-record-field="conditions_table">$[jvar_record.conditions_table]</td>
                    <td data-record-field="conditions">$[jvar_record.conditions]</td>
                </tr>
            </j2:forEach>
        </tbody>
        <tfoot style="display: $[scopedRecords.length ? 'none' : 'block'];">
            <tr>
                <td colspan="4">No other records in this table.</td>
            </tr>
        </tfoot>
    </table>

	<script>
	(function () {
		'use strict';
		
		addLoadEvent(function () {		
			var watchedTable = '$[current.getTableName()]';
			var watchedFilter = 'sys_id!=$[current.getUniqueValue()]';
			var watchedFields = ['name', 'parent', 'conditions_table', 'conditions'];
		
			var table = window.document.getElementById('${ref}_record_table');
			var watcherChannel = getChannelRW(watchedTable, watchedFilter);
			watcherChannel.subscribe(function(message) {
				var tbody = table.querySelector('tbody');
				var tfoot = table.querySelector('tfoot');
				var rowSelector = 'tr[data-record-sys-id="' + message.data.sys_id + '"]';

				if (message.data.operation == 'update') {
					var changedFields = message.data.changes.filter(function (f) {
						return watchedFields.indexOf(f) != -1;
					});

					if (changedFields.length) {
						var updateRow = tbody.querySelector(rowSelector);
						changedFields.forEach(function (field) {
							var cellSelector = 'td[data-record-field="' + field + '"]';
							var cell = updateRow.querySelector(cellSelector);
							cell.innerHTML = message.data.record[field].display_value;
						});
					}
				} else if (message.data.operation == 'insert') {
					var newRow = tbody.querySelector(rowSelector);
					if (newRow == null) {
						newRow = tbody.insertRow(0);
						newRow.setAttribute('data-record-sys-id', message.data.sys_id);

						watchedFields.forEach(function (field) {
							var newCell = newRow.insertCell();
							newCell.setAttribute('data-record-field', field);
							if (field in message.data.record) {
								newCell.innerHTML = message.data.record[field].display_value;
							}
						});
					}
				} else if (message.data.operation == 'delete') {
					var deleteRow = tbody.querySelector(rowSelector);
					if (deleteRow) {
						deleteRow.remove();
					}
				}
		
				if (tbody.rows.length == 0) {
					tfoot.style.display = '';
				} else {
					tfoot.style.display = 'none';
				}
			});
		});

		// the following functions are taken/inspired by the 'amb' service ('ng.amb' module)
		// source code: /scripts/app.ng.amb/service.AMB.js
		function getFilterString(filter) {
			filter = filter.
				replace(/\^EQ/g, '').
				replace(/\^ORDERBY(?:DESC)?[^^]*/g, '').
				replace(/^GOTO/, '');
				return btoa(unescape(encodeURIComponent(filter))).replace(/=/g, '-');
		}

		function getChannelRW(table, filter) {
			var ambClient = window.g_ambClient || window.top.g_ambClient;
			var t = '/rw/default/' + table + '/' + getFilterString(filter);
			return ambClient.getChannel(t);
		}
	})();
	</script>
</j:jelly>]]></xml>
    </sys_ui_macro>
</record_update>
